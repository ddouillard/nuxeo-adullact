<?xml version="1.0"?>
<component
  name="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent.adullact.contrib"
  version="1.0">

  <require>org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent</require>

  <extension
    target="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent"
    point="documentMapping">

    <docConfig tagName="seance">
      <docType>WebDelibSeance</docType>
      <name>@IdSeance</name>
      <parent><![CDATA[ #{
        String idDepot = xml.selectNodes('//@idDepot')[0].getText();
        org.nuxeo.ecm.core.api.DocumentModelList previousVersionActes = session.query('SELECT * FROM WebDelibActe WHERE webdelib_common:adu_id = \'' + idDepot + '\'');
        for (org.nuxeo.ecm.core.api.DocumentModel previousVersionActe : previousVersionActes) {
          session.removeDocument(previousVersionActe.getRef());
        }

        org.nuxeo.ecm.core.api.DocumentModelList previousVersionSeances = session.query('SELECT * FROM WebDelibSeance WHERE webdelib_common:adu_id = \'' + idDepot + '\'');
        for (org.nuxeo.ecm.core.api.DocumentModel previousVersionSeance : previousVersionSeances) {
          session.removeDocument(previousVersionSeance.getRef());
        }

        String dateStr = currentElement.selectNodes('dateSeance/text()')[0].getText().substring(0,10);
        return Fn.mkdir(root,'-',dateStr,'WebDelibStructure');
      }]]>
      </parent>
    </docConfig>

    <docConfig tagName="dossierActe">
      <docType>WebDelibActe</docType>
      <name>Acte-{{@idActe}}</name>
      <parent><![CDATA[ #{nodes = currentElement.selectNodes('@refSeance');
                        if (nodes.size()>0) {
                          String seanceRef = nodes.get(0).getText();
                          String parentRef = '//seance[@idSeance=\"' + seanceRef + '\"]';
                          return xml.selectNodes(parentRef).get(0);
                        } else {
                          String dateStr = currentElement.selectNodes('dateACTE/text()')[0].getText().substring(0,10);
                          Fn.mkdir(root,'-',dateStr,'WebDelibStructure');
                          return Fn.mkdir(root,'-',dateStr + '-Autres','WebDelibStructureOthers');
                        }}]]>
      </parent>
    </docConfig>

    <docConfig tagName="//dossierActe/document[@type='signature']">
      <docType>WebDelibSignature</docType>
      <name>@nom</name>
      <parent>..</parent>
    </docConfig>

    <docConfig tagName="//dossierActe/document[@type!='signature']">
      <docType>WebDelibDocument</docType>
      <name>@nom</name>
      <parent>..</parent>
    </docConfig>

  </extension>

  <extension
    target="org.nuxeo.ecm.platform.importer.xml.parser.XMLImporterComponent"
    point="attributeMapping">

    <!-- SEANCE -->
    <attributeConfig tagName="seance" docProperty="webdelib_common:adu_id"
      xmlPath="../@idDepot" />
    <attributeConfig tagName="titre" docProperty="dc:title"
      xmlPath="text()" />
    <attributeConfig tagName="typeSeance" docProperty="webdelibseance:type"
      xmlPath="text()" />
    <attributeConfig tagName="dateSeance" docProperty="webdelibseance:date_seance"
      xmlPath="#{
      String date = currentElement.selectNodes('text()')[0].getText().trim();
      if (date.length() == 10) {
        return Fn.parseDate(date, 'yyyy-MM-dd')
      }
      return Fn.parseDate(date, 'yyyy-MM-dd HH:mm:ss')
      }" />
    <attributeConfig tagName="dateConvocation"
      docProperty="webdelibseance:date_convocation"
      xmlPath="#{
      String date = currentElement.selectNodes('text()')[0].getText().trim();
      if (date.length() == 10) {
        return Fn.parseDate(date, 'yyyy-MM-dd')
      }
      return Fn.parseDate(date, 'yyyy-MM-dd HH:mm:ss')
      }" />
    <attributeConfig tagName="seance" docProperty="webdelibseance:idSeance"
      xmlPath="@idSeance" />
    <attributeConfig tagName="//seance/document[@type='convocation']"
      docProperty="webdelibseance:convocation_file">
      <mapping documentProperty="filename">@nom</mapping>
      <mapping documentProperty="mimetype">mimetype/text()</mapping>
      <mapping documentProperty="encoding">encoding/text()</mapping>
      <mapping documentProperty="content">@nom</mapping>
    </attributeConfig>
    <attributeConfig tagName="//seance/document[@type='odj']"
      docProperty="webdelibseance:ordre_du_jour_file">
      <mapping documentProperty="filename">@nom</mapping>
      <mapping documentProperty="mimetype">mimetype/text()</mapping>
      <mapping documentProperty="encoding">encoding/text()</mapping>
      <mapping documentProperty="content">@nom</mapping>
    </attributeConfig>
    <attributeConfig tagName="//seance/document[@type='pv_sommaire']"
      docProperty="webdelibseance:pv_sommaire_file">
      <mapping documentProperty="filename">@nom</mapping>
      <mapping documentProperty="mimetype">mimetype/text()</mapping>
      <mapping documentProperty="encoding">encoding/text()</mapping>
      <mapping documentProperty="content">@nom</mapping>
    </attributeConfig>
    <attributeConfig tagName="//seance/document[@type='pv_complet']"
      docProperty="webdelibseance:pv_complet_file">
      <mapping documentProperty="filename">@nom</mapping>
      <mapping documentProperty="mimetype">mimetype/text()</mapping>
      <mapping documentProperty="encoding">encoding/text()</mapping>
      <mapping documentProperty="content">@nom</mapping>
    </attributeConfig>


    <!-- ACTE -->
    <attributeConfig tagName="dossierActe" docProperty="webdelib_common:adu_id"
      xmlPath="../@idDepot" />
    <attributeConfig tagName="//dossierActe" docProperty="webdelibacte:idActe"
      xmlPath="@idActe" />

    <attributeConfig tagName="titre" docProperty="dc:title"
      xmlPath="#{
                String titre = currentElement.getStringValue();
                if (titre == null || ''.equals(titre.trim())) {
                  return currentDocument.getTitle();
                }
                return titre;
              }" />
    <attributeConfig tagName="libelle" docProperty="dc:title"
      xmlPath="#{
                String titre = currentElement.getStringValue();
                if (titre == null || ''.equals(titre.trim())) {
                  return currentDocument.getTitle();
                }
                return titre;
              }" />
    <attributeConfig tagName="description" docProperty="dc:description"
      xmlPath="text()" />
    <attributeConfig tagName="natureACTE" docProperty="webdelibacte:nature"
      xmlPath="text()" />
    <attributeConfig tagName="dateACTE" docProperty="webdelibacte:date"
      xmlPath="#{
              String date = currentElement.selectNodes('text()')[0].getText().trim();
                if (date.length() == 10) {
                  return Fn.parseDate(date, 'yyyy-MM-dd')
                }
                return Fn.parseDate(date, 'yyyy-MM-dd HH:mm:ss')
              }" />
    <attributeConfig tagName="numeroACTE" docProperty="webdelibacte:numero"
      xmlPath="text()" />
    <attributeConfig tagName="themeACTE" docProperty="webdelibacte:theme"
      xmlPath="text()" />
    <attributeConfig tagName="emetteurACTE" docProperty="webdelibacte:emetteur"
      xmlPath="text()" />
    <attributeConfig tagName="redacteurACTE" docProperty="webdelibacte:redacteur"
      xmlPath="text()" />
    <attributeConfig tagName="rapporteurACTE" docProperty="webdelibacte:rapporteur"
      xmlPath="text()" />
    <attributeConfig tagName="cantonACTE" docProperty="webdelibacte:canton"
      xmlPath="text()" />
    <attributeConfig tagName="communeACTE" docProperty="webdelibacte:commune"
      xmlPath="text()" />
    <attributeConfig tagName="typeseanceACTE" docProperty="webdelibacte:type"
      xmlPath="text()" />
    <attributeConfig tagName="listeCommissions"
      docProperty="webdelibacte:commissions" xmlPath="text()" />
    <attributeConfig tagName="//dossierActe/document"
      docProperty="file:content">
      <mapping documentProperty="filename">@nom</mapping>
      <mapping documentProperty="mimetype">mimetype/text()</mapping>
      <mapping documentProperty="encoding">encoding/text()</mapping>
      <mapping documentProperty="content">@nom</mapping>
    </attributeConfig>

    <!-- ACTE SUB-DOCUMENTS -->
    <attributeConfig tagName="//dossierActe/document"
      docProperty="webdelibdocument:type" xmlPath="@type" />

    <!-- SIGNATURE -->
    <attributeConfig tagName="//document[@type='signature']"
      docProperty="dc:source" xmlPath="@refDocument" />

  </extension>

</component>
